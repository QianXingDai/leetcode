int lengthOfLIS(int* nums, int numsSize) {
    if(numsSize <= 1)
        return numsSize;
    
    int len = 0;
    
    int *increasingSequence = (int*)malloc(sizeof(int)*numsSize);
    increasingSequence[len++] = nums[0];
    
    for(int i = 1; i < numsSize; i++)
    {
        if(nums[i] > increasingSequence[len-1])
            increasingSequence[len++] = nums[i];
        else
        {
            int pos = findPositionToReplace(increasingSequence,0,len-1,nums[i]);
            increasingSequence[pos] = nums[i];
        }
    }
    return len;
}



int findPositionToReplace(int *nums,int low,int high,int target)
{
    int mid;
    while(low <= high)
    {
        mid = low + (high - low) / 2;
        if(nums[mid] == target)
            return mid;
        else if(nums[mid] > target)
            high = mid - 1;
        else
            low = mid + 1;
    }
    return low; 
}
